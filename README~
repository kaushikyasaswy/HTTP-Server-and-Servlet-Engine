Description:

This project is a full-fledged Web Server. This project comprises a HTTP Server for serving static content via the browser and also an Application Server for deploying applications just as you would on a server like Tomcat. I used "HTTP Made Really Easy" and "RFC 2616" as a reference for implementing the server. Also, the server is multithreaded to enhance the efficiency.

The server can be used to render static content such as images, files, html pages etc. These need to be placed in a directory on your local system and the path to the directory needs to be passed as a command line argument. The server supports GET, HEAD and POST requests. Also, the server supports two predefined paths. '/control' displays the control widget which displays the staus of the server, the staus of each thread and a button to shutdown the server. Alternatively, a request to '/shutdown' can also be used to shutdown the server. Servlets can be deployed on the server but please ensure the class files are accessible to the server. Also, the path to the web.xml file needs to be passed as a command line argument. I used a very efficient implementation of a SAX parser to parse the web.xml file. The server also has support for advanced real-time features such as chunked encoding and persistent connections.

The performance of a web server is of high concern. I used Apachebench to test the performance of my server. The server stood strong against 100000 requests with a concurreny level of 1000 requests. The average response time was 250 ms.

Instructions to run:

Run it as a java application. It accepts a few command line arguments which are listed below in order.
1) Port at which to start the server
2) Path to the directory containing the static content (Could include images, html pages, files etc.)
3) Path to the web.xml file describing the various servlets that will be deployed

Note:

A major choke point for a web server is intensive I/O. To enhance this, I have also implemented an Asynchronous Event-Driven version of the server using JAVA NIO. Please drop me an email for the code.

